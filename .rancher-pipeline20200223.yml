stages:
- name: build and push docker image
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest
      pushRemote: true
      registry: harbor-demo.iiidevops.org
    env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_MIRROR: https://harbor-demo.iiidevops.org
      PLUGIN_MTU: "1000"
    when:
      branch:
        include:
        - master
        - develop

- name: Checkmarx source code scan
  steps:
  - applyAppConfig:
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-checkmarx
      version: 0.1.0
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx
      targetNamespace: ${CICD_GIT_REPO_NAME}
      answers:
        # Common answers
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        harbor.host: harbor-demo.iiidevops.org
        git.url: ${CICD_GIT_URL}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
  when:
    branch:
      include:
        - master
        - checkmarx

- name: Deploy db
  steps:
  - applyAppConfig:
      catalogTemplate: cattle-global-data:iii-dev-charts3-db
      version: 0.2.0
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-db
      targetNamespace: ${CICD_GIT_REPO_NAME}
      answers:
        git.host: gitlab-demo.iiidevops.org
        # 這裡是為了告訴要處理的git來源為何
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.branch: ${CICD_GIT_BRANCH}
        db.type: mariadb
        db.gui: true
        # 使用者資料庫管理密碼
        db.username: bear
        db.password: password
        # 使用者初始想要建立的資料庫名稱
        db.name: mydb
    when:
      branch:
        include:
          - master

- name: Wait db deployment
  steps:
  - runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: >-
        rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
    env:
      namespace: ${CICD_GIT_REPO_NAME}
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-db
      max_wait: 128
    envFrom:
    - sourceName: pipeline-api-key
      sourceKey: API_TOKEN
      targetKey: rancher_api_token
    - sourceName: rancher
      sourceKey: rancher-url
      targetKey: rancher_url
    when:
      branch:
        include:
          - master

- name: Deploy app-web
  steps:
  - applyAppConfig:
      catalogTemplate: cattle-global-data:iii-dev-charts3-web
      version: 0.4.0
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      targetNamespace: ${CICD_GIT_REPO_NAME}
      answers:
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        harbor.host: harbor-demo.iiidevops.org
        git.url: ${CICD_GIT_URL}
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        web.port: 8080
        web.imageTag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest
        # db settings, all should be as same as those in deploy-db stage
        db.releaseName: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-db
        db.username: bear
        db.password: password
        db.name: mydb
    when:
      branch:
        include:
          - master
          - develop

- name: Wait web deployment
  steps:
  - runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: >-
        rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
    env:
      namespace: ${CICD_GIT_REPO_NAME}
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      max_wait: 128
    envFrom:
    - sourceName: pipeline-api-key
      sourceKey: API_TOKEN
      targetKey: rancher_api_token
    - sourceName: rancher
      sourceKey: rancher-url
      targetKey: rancher_url
    when:
      branch:
        include:
          - master

- name: Postman test
  steps:
  - applyAppConfig:
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-postman
      version: 0.1.0
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-pm
      targetNamespace: ${CICD_GIT_REPO_NAME}
      answers:
        web.deployName: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
        web.port: 8080
        # Common answers
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        harbor.host: harbor-demo.iiidevops.org
        git.url: ${CICD_GIT_URL}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
  when:
    branch:
      include:
        - master

- name: Webinspect test
  steps:
  - applyAppConfig:
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-webinspect
      version: 0.1.0
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-wi
      targetNamespace: ${CICD_GIT_REPO_NAME}
      answers:
        # Common answers
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        harbor.host: harbor-demo.iiidevops.org
        git.url: ${CICD_GIT_URL}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        web.deployName: "${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-web"
  when:
    branch:
      include:
        - master
